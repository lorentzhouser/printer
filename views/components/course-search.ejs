{% load static %}
<div class="input-field course-search" @keydown="nextItem($event)">
    <input type="text" id="course-input" v-model="courseQuery" @input="readQuery()" autocomplete="off" placeholder="Fag"
           :data-course-code="selectedCourse.course_code" :data-course-name="selectedCourse.name" name="course">
    <label for="{{ form.name.id_for_label }}">Fag</label>
    <p class="helper-text">Søk på navn eller fagkode</p>
    <div class="preloader" :class="{'loading': loading}"></div>
    <ul class="errorlist">
        <li>[{ error }]</li>
    </ul>
    <div class="autocomplete" v-show="suggestions.length > 0">
        <div v-for="(suggestion, index) in suggestions" @click="setSelectedCourse(suggestion)" :key='index'
             :class='{"active-item": currentItem === index}'>
            [{ suggestion.name }] - [{ suggestion.course_code }]
        </div>
    </div>
</div>

<script src="{% static 'js/ajaxSetup.js' %}"></script>
<script>
    const debounce = (func, delay) => {
        let inDebounce;
        return function () {
            const context = this;
            const args = arguments;
            clearTimeout(inDebounce);
            inDebounce = setTimeout(() => func.apply(context, args), delay);
        }
    };
    let courseSearch = new Vue({
        el: '.course-search',
        delimiters: ['[{', '}]'],
        data: {
            'suggestions': [],
            'courseQuery': '',
            'selectedCourse': {},
            'currentItem': 0,
            'loading': false,
            'error': ''
        },
        methods: {
            generateSelectedText: function (course) {
                return `${course.name} - ${course.course_code}`
            },
            nextItem: function (event) {
                if (event.keyCode === 38 && this.currentItem > 0) {
                    this.currentItem--
                } else if (event.keyCode === 40 && this.currentItem < this.suggestions.length - 1) {
                    this.currentItem++
                } else if (event.keyCode === 13) {
                    this.selectedCourse = this.suggestions[this.currentItem];
                    this.courseQuery = this.generateSelectedText(this.selectedCourse);
                    this.suggestions = [];
                    event.preventDefault();
                }
            },
            setSelectedCourse: function (course) {
                this.selectedCourse = course;
                this.courseQuery = this.generateSelectedText(course);
                this.suggestions = [];
                $('#id_name').val(this.selectedCourse.name);
                $('#id_course_code').val(this.selectedCourse.course_code);
            },
            readQuery: function () {
                this.error = '';
                if (this.courseQuery.length >= 3) {
                    this.searchCourses(this.courseQuery);
                } else {
                    this.suggestions = [];
                }
            },
            searchCourses: debounce(function (query) {
                const self = this;
                self.loading = true;
                $.ajax({
                    type: 'POST',
                    url: '{% url 'create_course' %}',
                    data: {
                        'query': query,
                    },
                    success: function (data) {
                        courseSearch.suggestions = data.suggestions;
                        if (!data.suggestions.length) self.error = `Inge treff på ${query}`;
                        else (self.error = '');
                        self.loading = false;
                    },
                    error: function (data) {
                        self.loading = false;
                    }
                });
            }, 300)
        }
    });
</script>